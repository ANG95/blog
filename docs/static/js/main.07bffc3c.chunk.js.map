{"version":3,"sources":["App.js","serviceWorker.js","index.js","assets/img/yo.jpg"],"names":["App","className","src","yo","alt","width","Label","style","fontSize","color","fontFamily","borderBottom","borderTop","textAlign","backgroundColor","height","boxShadow","marginTop","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"mNAsEeA,MAhEf,WACE,OACE,kBAAC,WAAD,KACE,yBAAKC,UAAU,2BACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,wBACb,yBAAKC,IAAKC,IAAIC,IAAI,mBAAmBH,UAAU,yBAAyBI,MAAM,UAC9E,6BACA,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,SAAU,OACVC,MAAO,QACPC,WAAY,YACZC,aAAc,qBACdC,UAAW,uBANf,mBASA,uBAAGL,MAAO,CACRC,SAAU,SACVC,MAAO,QACPC,WAAY,gBAHd,6BAMA,yBAAKH,MAAO,CAAEM,UAAW,UAAUJ,MAAO,YACxC,yaAIA,qWAMJ,yBAAKR,UAAU,uBACbM,MAAO,CACLO,gBAAiB,wBACjBC,OAAQ,cACRC,UAAW,+BAEb,kBAACV,EAAA,EAAD,CACEC,MAAO,CACLC,SAAU,OACVC,MAAO,QACPC,WAAY,YACZC,aAAc,qBACdC,UAAW,uBANf,mBASF,yBAAKX,UAAU,+BAEb,4BAAQA,UAAU,UAAUM,MAAO,CAAEU,UAAW,SAAhD,gBACA,4BAAQhB,UAAU,WAAlB,cACA,4BAAQA,UAAU,WAAlB,cACA,4BAAQA,UAAU,WAAlB,mBChDNiB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfT,UAAUC,cAAcS,YAI1BC,QAAQC,IACN,iHAKEb,GAAUA,EAAOc,UACnBd,EAAOc,SAAST,KAMlBO,QAAQC,IAAI,sCAGRb,GAAUA,EAAOe,WACnBf,EAAOe,UAAUV,WAO5BW,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCzFjEC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDWnB,SAAkBtB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIsB,IAAIC,GAAwB9B,OAAOC,SAAS8B,MACpDC,SAAWhC,OAAOC,SAAS+B,OAIvC,OAGFhC,OAAOiC,iBAAiB,QAAQ,WAC9B,IAAM5B,EAAK,UAAMyB,GAAN,sBAEPhC,IAgEV,SAAiCO,EAAOC,GAEtC4B,MAAM7B,EAAO,CACX8B,QAAS,CAAE,iBAAkB,YAE5BzB,MAAK,SAAA0B,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CjC,UAAUC,cAAciC,MAAM/B,MAAK,SAAAC,GACjCA,EAAa+B,aAAahC,MAAK,WAC7BV,OAAOC,SAAS0C,eAKpBvC,EAAgBC,EAAOC,MAG1BgB,OAAM,WACLJ,QAAQC,IACN,oEAvFAyB,CAAwBvC,EAAOC,GAI/BC,UAAUC,cAAciC,MAAM/B,MAAK,WACjCQ,QAAQC,IACN,iHAMJf,EAAgBC,EAAOC,OCjC/BE,I,kBCjBAqC,EAAOC,QAAU,IAA0B,gC","file":"static/js/main.07bffc3c.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Label } from 'reactstrap';\nimport yo from \"./assets/img/yo.jpg\"\n// import logo from './logo.svg';\n// import './App.css';\n\nfunction App() {\n  return (\n    <Fragment>\n      <div className=\"container-fluid portada\">\n        <div className=\"row\">\n          <div className=\"col-sm-5 text-center\">\n            <img src={yo} alt=\"yo german apaza \" className=\"rounded rounded-circle\" width=\"200em\" />\n            <br />\n            <Label\n              style={{\n                fontSize: \"4rem\",\n                color: \"white\",\n                fontFamily: \"monospace\",\n                borderBottom: \"1px dashed #189aa2\",\n                borderTop: \"1px dashed #189aa2\",\n              }}>GERMÁN APAZA</Label>\n\n            <p style={{\n              fontSize: \"1.5rem\",\n              color: \"wheat\",\n              fontFamily: \"courier new\"\n            }}>Programador Web Fullstack</p>\n\n            <div style={{ textAlign: \"justify\",color: \"#40fffc\" }}>\n              <p>\n                Soy Programador Web Fulltack y Diseñador Gráfico aficionado, estudié la carrera de Ingeniería de Sistemas y me especialicé en aquello que realmente me apasionó, la programación.\n                En los últimos 3 años he desarrollado aplicaciones para escritorio y app moviles con javascript y reactjs asi tambien sitios web que generan valor y aumenta el desempeño de las empresas.\n              </p>\n              <p>\n                Lo que me gusta de hacer esto es ésa sensación gratificante de crear y resolver, principalmente ver la satisfacción del cliente y haberlo apoyado para seguir triunfando,\n                Todo lo que tenga que ver con programación y diseño me interesa. Trato de aprender siempre lo que mas puedo ya que la tecnologia no espera.\n              </p>\n            </div>\n          </div>\n          <div className=\"col-sm-5 text-center\"\n            style={{\n              backgroundColor: \"rgba(10, 9, 40, 0.75)\",\n              height: \"calc(100vh)\",\n              boxShadow: \"#0a0928 7px -1px 97px 30px\"\n            }}>\n            <Label\n              style={{\n                fontSize: \"2rem\",\n                color: \"white\",\n                fontFamily: \"monospace\",\n                borderBottom: \"1px dashed #189aa2\",\n                borderTop: \"1px dashed #189aa2\",\n              }}>Mi experiencia</Label>\n          </div>\n          <div className=\"col-sm-2 d-flex flex-column\">\n            {/* <div className=\"\"> */}\n            <button className=\"botones\" style={{ marginTop: \"auto\" }}>ACERCA DE MI</button>\n            <button className=\"botones\">MI TRABAJO</button>\n            <button className=\"botones\">CONTACTAME</button>\n            <button className=\"botones\">TUTORIALES</button>\n            {/* </div> */}\n          </div>\n        </div>\n      </div>\n\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/yo.d2a58c6f.jpg\";"],"sourceRoot":""}